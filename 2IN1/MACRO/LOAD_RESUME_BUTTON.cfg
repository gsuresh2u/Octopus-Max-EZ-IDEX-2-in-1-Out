
#####################################################################
#  Variable for this configurations
#  ATTENTION: 
#  KLIPPER merges all [gcode_macro VARIABLE] into one configuration file.
#  If the variable name already exists it will be overwritten!
#####################################################################

[gcode_macro VARIABLE]
gcode:

variable_filament_change : { }

# e.g. filament_change = 'purge': {'distance':15, 'speed':100 }

#############################################################
# Creating a list of variables from the printer configuration
# using [gcode_macro RUN_MACRO_INIT] which will run
# in [delayed_gcode _INIT] after restarting FW Klipper.
#
# This macro finds all defined _INIT_* macros and runs them.
# The start order can be defined by names: _A_INIT_* , _B_INIT_* etc.
#############################################################

[gcode_macro _INIT_BUTTON_FILAMENT_CHANGE]
gcode:

 {% set user_vars = printer["gcode_macro VARIABLE"] %}
 {% set name = "filament_change" %}    
 {% set init = user_vars.filament_change %}       
 
 {% set _dummy = init.update( {'purge':{'distance':15, 'speed':100 } } ) %} 
  
     SET_GCODE_VARIABLE MACRO=VARIABLE VARIABLE={name} VALUE="{init}"
     {action_respond_info("Creating a list of variables for M600")}

###################################################
#  
#  extension M600 macro function
#
###################################################
# HW - Definition Buttons LOAD and RESUME
###################################################

#[gcode_button LOAD]
#pin:     ## encoder_pins: ^PB3, ^PB1
#press_gcode: LOAD_BUTTON

#[gcode_button RESUME]
#pin:     ## click_pin: ^!PE7
#press_gcode: RESUME_BUTTON

###################################################

[gcode_macro WAIT_FOR]
variable_wait: False
gcode:  
  SET_GCODE_VARIABLE MACRO=WAIT_FOR VARIABLE=wait VALUE=True
  UPDATE_DELAYED_GCODE ID=LOOP_WAIT DURATION=1
  
[delayed_gcode LOOP_WAIT]
gcode:
  {% if printer['gcode_macro WAIT_FOR'].wait %}   
   UPDATE_DELAYED_GCODE ID=LOOP_WAIT DURATION=1  
  {% endif %}

######################################################################### 

[gcode_macro LOAD_BUTTON]
gcode:
  {% set user_vars = printer["gcode_macro VARIABLE"] %}
  
       {% if user_vars.filament_change.status.load == 1 %}  
           ### Load filament  
            LOAD_FILAMENT           
       {% elif user_vars.filament_change.status.load == 2 %}
           ### purge more filament
           PURGE_MORE
       {% endif %}    
    
######################################################################## 
 
[gcode_macro PURGE_MORE]
gcode:
    {% set user_vars = printer["gcode_macro VARIABLE"] %}
    {% set act_extr =printer['toolhead'].extruder%}   
    ### end of definitions ### 
	
  {% if printer[(act_extr)].can_extrude | lower == 'true'%}
    RESPOND MSG=" Purge more filament"	
    SAVE_GCODE_STATE NAME=purge_more    
    ### purge more filement    
    M83	 
    G1 E{user_vars.filament_change.purge.distance} F{user_vars.filament_change.purge.speed}     
    M400
    M300 P100
    RESPOND MSG=" Press LOAD (to purge more) or RESUME button" 
    RESTORE_GCODE_STATE NAME=purge_more    
  {% else %}
    RESPOND MSG=" Low extruder temp "
 {% endif %}      

########################################################################

[gcode_macro RESUME_BUTTON ]
gcode:
    
     {% set user_vars = printer["gcode_macro VARIABLE"] %}
     {% set name = "filament_change" %}
     {% set init = user_vars.filament_change %}
         
    {% if user_vars.filament_change.status.load == 1 %}   
        RESPOND MSG="Warning : Filament Unloaded press LOAD button !"         
    {% elif user_vars.filament_change.status.load == 2 %} 
        {% if user_vars.filament_change.status.enable %}      
            RESPOND MSG=" Filament loaded now Resume Print"          
            
          {% if 'gcode_macro M602' in printer  %}   
              M602   ### Resume print (from parking position)     
          {% else %}
               RESUME     
          {% endif %}     
                  
          {% set _dummy= init.status.update({  'enable':False, 'load':0  })%}     
          ## Reset load filament status
            SET_GCODE_VARIABLE MACRO=VARIABLE  VARIABLE={name}  VALUE="{init}"  
          ## Reset LOOP_WAIT macro
            SET_GCODE_VARIABLE MACRO=WAIT_FOR VARIABLE=wait VALUE=False   
        
        {% else %}        
           RESPOND MSG=" There is nothing to resume "   
        {% endif %}          
    {% endif %} 
  
######################################################################### 
